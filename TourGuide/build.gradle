buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.6.5")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'eclipse'
}


repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

ext {
    set('springCloudVersion', "2021.0.0")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.5'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.5'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.2.1'

    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
	implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'

    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.6.1'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1'

}

jar {
    enabled = true
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
